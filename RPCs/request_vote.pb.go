// Code generated by protoc-gen-go. DO NOT EDIT.
// source: request_vote.proto

package RPCs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestVoteRequest struct {
	Term                 *uint64   `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	LastLogIndex         *uint64   `protobuf:"varint,2,opt,name=LastLogIndex,proto3" json:"LastLogIndex,omitempty"`
	LastLogTerm          *uint64   `protobuf:"varint,3,opt,name=LastLogTerm,proto3" json:"LastLogTerm,omitempty"`
	CandidateName        *string   `protobuf:"bytes,4,opt,name=CandidateName,proto3" json:"CandidateName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteRequest) Reset()         { *m = RequestVoteRequest{} }
func (m *RequestVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RequestVoteRequest) ProtoMessage()    {}
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbf1fb495c7f1887, []int{0}
}

func (m *RequestVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteRequest.Unmarshal(m, b)
}
func (m *RequestVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteRequest.Marshal(b, m, deterministic)
}
func (m *RequestVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteRequest.Merge(m, src)
}
func (m *RequestVoteRequest) XXX_Size() int {
	return xxx_messageInfo_RequestVoteRequest.Size(m)
}
func (m *RequestVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteRequest proto.InternalMessageInfo

func (m *RequestVoteRequest) GetTerm() uint64 {
	if m != nil {
		return *m.Term
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogIndex() uint64 {
	if m != nil {
		return *m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogTerm() uint64 {
	if m != nil {
		return *m.LastLogTerm
	}
	return 0
}

func (m *RequestVoteRequest) GetCandidateName() string {
	if m != nil {
		return *m.CandidateName
	}
	return ""
}

type RequestVoteResponse struct {
	Term                 *uint64   `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	VoteGranted          *bool     `protobuf:"varint,2,opt,name=VoteGranted,proto3" json:"VoteGranted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteResponse) Reset()         { *m = RequestVoteResponse{} }
func (m *RequestVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResponse) ProtoMessage()    {}
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbf1fb495c7f1887, []int{1}
}

func (m *RequestVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteResponse.Unmarshal(m, b)
}
func (m *RequestVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteResponse.Marshal(b, m, deterministic)
}
func (m *RequestVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteResponse.Merge(m, src)
}
func (m *RequestVoteResponse) XXX_Size() int {
	return xxx_messageInfo_RequestVoteResponse.Size(m)
}
func (m *RequestVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteResponse proto.InternalMessageInfo

func (m *RequestVoteResponse) GetTerm() uint64 {
	if m != nil {
		return *m.Term
	}
	return 0
}

func (m *RequestVoteResponse) GetVoteGranted() bool {
	if m != nil {
		return *m.VoteGranted
	}
	return false
}

func init() {
	proto.RegisterType((*RequestVoteRequest)(nil), "RPCs.RequestVoteRequest")
	proto.RegisterType((*RequestVoteResponse)(nil), "RPCs.RequestVoteResponse")
}

func init() { proto.RegisterFile("request_vote.proto", fileDescriptor_fbf1fb495c7f1887) }

var fileDescriptor_fbf1fb495c7f1887 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xb1, 0x4a, 0xc5, 0x30,
	0x14, 0x86, 0x8d, 0x06, 0xb9, 0x9e, 0xe8, 0x72, 0x5c, 0xa2, 0x53, 0x08, 0x0e, 0x77, 0xea, 0xa0,
	0x6f, 0xe0, 0x15, 0x44, 0x2c, 0x52, 0xa2, 0xb8, 0x4a, 0x24, 0x07, 0x71, 0x68, 0x52, 0x93, 0x28,
	0x3e, 0x88, 0x0f, 0x2c, 0x4d, 0x3b, 0xa4, 0xdc, 0x6e, 0xe7, 0xfc, 0xff, 0x49, 0xf8, 0xf8, 0x00,
	0x23, 0x7d, 0x7d, 0x53, 0xca, 0x6f, 0x3f, 0x21, 0x53, 0x33, 0xc4, 0x90, 0x03, 0x72, 0xd3, 0xed,
	0x92, 0xfe, 0x63, 0x80, 0x66, 0x2a, 0x5f, 0x43, 0xa6, 0x79, 0x44, 0x04, 0xfe, 0x42, 0xb1, 0x97,
	0x4c, 0xb1, 0x2d, 0x37, 0x65, 0x46, 0x0d, 0xa7, 0xad, 0x4d, 0xb9, 0x0d, 0x1f, 0x0f, 0xde, 0xd1,
	0xaf, 0x3c, 0x2c, 0xdd, 0x22, 0x43, 0x05, 0x62, 0xde, 0xcb, 0xf3, 0xa3, 0x72, 0x52, 0x47, 0x78,
	0x05, 0x67, 0x3b, 0xeb, 0xdd, 0xa7, 0xb3, 0x99, 0x9e, 0x6c, 0x4f, 0x92, 0x2b, 0xb6, 0x3d, 0x31,
	0xcb, 0x50, 0x3f, 0xc2, 0xf9, 0x82, 0x2a, 0x0d, 0xc1, 0x27, 0x5a, 0xc5, 0x52, 0x20, 0xc6, 0x9b,
	0xfb, 0x68, 0x7d, 0x26, 0x57, 0xa8, 0x36, 0xa6, 0x8e, 0xae, 0x9f, 0x41, 0x54, 0x9f, 0xe1, 0x1d,
	0x88, 0x58, 0xad, 0xb2, 0x19, 0x45, 0x34, 0xfb, 0x12, 0x2e, 0x2f, 0x56, 0x9a, 0x09, 0x44, 0x1f,
	0xdc, 0x6e, 0xa0, 0x08, 0xec, 0xd8, 0xfb, 0x71, 0xf1, 0x79, 0xf3, 0x1f, 0x00, 0x00, 0xff, 0xff,
	0x50, 0x63, 0x27, 0x4d, 0x65, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RequestVoteClient is the client API for RequestVote service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RequestVoteClient interface {
	RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error)
}

type requestVoteClient struct {
	cc *grpc.ClientConn
}

func NewRequestVoteClient(cc *grpc.ClientConn) RequestVoteClient {
	return &requestVoteClient{cc}
}

func (c *requestVoteClient) RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error) {
	out := new(RequestVoteResponse)
	err := c.cc.Invoke(ctx, "/RPCs.RequestVote/requestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RequestVoteServer is the server API for RequestVote service.
type RequestVoteServer interface {
	RequestVote(context.Context, *RequestVoteRequest) (*RequestVoteResponse, error)
}

// UnimplementedRequestVoteServer can be embedded to have forward compatible implementations.
type UnimplementedRequestVoteServer struct {
}

func (*UnimplementedRequestVoteServer) RequestVote(ctx context.Context, req *RequestVoteRequest) (*RequestVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVote not implemented")
}

func RegisterRequestVoteServer(s *grpc.Server, srv RequestVoteServer) {
	s.RegisterService(&_RequestVote_serviceDesc, srv)
}

func _RequestVote_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestVoteServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPCs.RequestVote/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestVoteServer).RequestVote(ctx, req.(*RequestVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RequestVote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RPCs.RequestVote",
	HandlerType: (*RequestVoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "requestVote",
			Handler:    _RequestVote_RequestVote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "request_vote.proto",
}
