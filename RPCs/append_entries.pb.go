// Code generated by protoc-gen-go. DO NOT EDIT.
// source: append_entries.proto

package RPCs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AppendEntriesRequest struct {
	Term                 *uint64      `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	PrevLogIndex         *uint64      `protobuf:"varint,2,opt,name=PrevLogIndex,proto3" json:"PrevLogIndex,omitempty"`
	PrevLogTerm          *uint64      `protobuf:"varint,3,opt,name=PrevLogTerm,proto3" json:"PrevLogTerm,omitempty"`
	CommitIndex          *uint64      `protobuf:"varint,4,opt,name=CommitIndex,proto3" json:"CommitIndex,omitempty"`
	LeaderName           *string      `protobuf:"bytes,5,opt,name=LeaderName,proto3" json:"LeaderName,omitempty"`
	Entries              []*LogEntry `protobuf:"bytes,6,rep,name=Entries,proto3" json:"Entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AppendEntriesRequest) Reset()         { *m = AppendEntriesRequest{} }
func (m *AppendEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesRequest) ProtoMessage()    {}
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b4beeedbaf7b49a, []int{0}
}

func (m *AppendEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesRequest.Unmarshal(m, b)
}
func (m *AppendEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesRequest.Marshal(b, m, deterministic)
}
func (m *AppendEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesRequest.Merge(m, src)
}
func (m *AppendEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesRequest.Size(m)
}
func (m *AppendEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesRequest proto.InternalMessageInfo

func (m *AppendEntriesRequest) GetTerm() uint64 {
	if m != nil {
		return *m.Term
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogIndex() uint64 {
	if m != nil {
		return *m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogTerm() uint64 {
	if m != nil {
		return *m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesRequest) GetCommitIndex() uint64 {
	if m != nil {
		return *m.CommitIndex
	}
	return 0
}

func (m *AppendEntriesRequest) GetLeaderName() string {
	if m != nil {
		return *m.LeaderName
	}
	return ""
}

func (m *AppendEntriesRequest) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AppendEntriesResponse struct {
	Term                 *uint64   `protobuf:"varint,1,opt,name=Term,proto3" json:"Term,omitempty"`
	Index                *uint64   `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	CommitIndex          *uint64   `protobuf:"varint,3,opt,name=CommitIndex,proto3" json:"CommitIndex,omitempty"`
	Success              *bool     `protobuf:"varint,4,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesResponse) Reset()         { *m = AppendEntriesResponse{} }
func (m *AppendEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesResponse) ProtoMessage()    {}
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b4beeedbaf7b49a, []int{1}
}

func (m *AppendEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesResponse.Unmarshal(m, b)
}
func (m *AppendEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesResponse.Marshal(b, m, deterministic)
}
func (m *AppendEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesResponse.Merge(m, src)
}
func (m *AppendEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesResponse.Size(m)
}
func (m *AppendEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesResponse proto.InternalMessageInfo

func (m *AppendEntriesResponse) GetTerm() uint64 {
	if m != nil {
		return *m.Term
	}
	return 0
}

func (m *AppendEntriesResponse) GetIndex() uint64 {
	if m != nil {
		return *m.Index
	}
	return 0
}

func (m *AppendEntriesResponse) GetCommitIndex() uint64 {
	if m != nil {
		return *m.CommitIndex
	}
	return 0
}

func (m *AppendEntriesResponse) GetSuccess() bool {
	if m != nil {
		return *m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*AppendEntriesRequest)(nil), "RPCs.AppendEntriesRequest")
	proto.RegisterType((*AppendEntriesResponse)(nil), "RPCs.AppendEntriesResponse")
}

func init() { proto.RegisterFile("append_entries.proto", fileDescriptor_5b4beeedbaf7b49a) }

var fileDescriptor_5b4beeedbaf7b49a = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x8d, 0x6d, 0xb7, 0xf9, 0xe6, 0x14, 0x42, 0x85, 0x50, 0x41, 0x4a, 0x4f, 0x3d, 0xf5,
	0x30, 0xff, 0x02, 0x1d, 0x1e, 0x94, 0x22, 0x25, 0x7a, 0xf3, 0x20, 0x75, 0x7d, 0x94, 0x81, 0x6d,
	0x6a, 0xd2, 0x89, 0x3b, 0xf8, 0x9f, 0xfa, 0xc7, 0x48, 0x93, 0x55, 0x52, 0xd7, 0x5b, 0xde, 0xf7,
	0x7d, 0x49, 0xbe, 0x1f, 0x0f, 0xfc, 0xbc, 0x69, 0xb0, 0x2e, 0x5e, 0xb1, 0x6e, 0xe5, 0x06, 0x55,
	0xd2, 0x48, 0xd1, 0x0a, 0xea, 0xf2, 0x6c, 0xa5, 0x82, 0xf3, 0x77, 0x51, 0x6a, 0x63, 0x67, 0xe4,
	0xe8, 0x87, 0x80, 0x7f, 0xa3, 0xf3, 0x77, 0x26, 0xce, 0xf1, 0x63, 0x8b, 0xaa, 0xa5, 0x14, 0xdc,
	0x67, 0x94, 0x15, 0x23, 0x21, 0x89, 0x5d, 0xae, 0xcf, 0x34, 0x82, 0xd3, 0x4c, 0xe2, 0x67, 0x2a,
	0xca, 0xfb, 0xba, 0xc0, 0x2f, 0x76, 0xac, 0xbd, 0x81, 0x46, 0x43, 0x98, 0xef, 0x67, 0x7d, 0xdd,
	0xd1, 0x11, 0x5b, 0xea, 0x12, 0x2b, 0x51, 0x55, 0x9b, 0xd6, 0x3c, 0xe2, 0x9a, 0x84, 0x25, 0xd1,
	0x2b, 0x80, 0x14, 0xf3, 0x02, 0xe5, 0x63, 0x5e, 0x21, 0xf3, 0x42, 0x12, 0x9f, 0x70, 0x4b, 0xa1,
	0x31, 0x4c, 0xf7, 0x6d, 0xd9, 0x24, 0x74, 0xe2, 0xf9, 0xf2, 0x2c, 0xe9, 0xe8, 0x92, 0x54, 0x94,
	0x9d, 0xbe, 0xe3, 0xbd, 0x1d, 0x7d, 0xc3, 0xc5, 0x3f, 0x3a, 0xd5, 0x88, 0x5a, 0xe1, 0x28, 0x9e,
	0x0f, 0x9e, 0xcd, 0xe5, 0xfd, 0x01, 0xd9, 0x75, 0x9d, 0xc3, 0xba, 0x0c, 0xa6, 0x4f, 0xdb, 0xf5,
	0x1a, 0x95, 0xd2, 0x30, 0x33, 0xde, 0x8f, 0xcb, 0x17, 0x58, 0x0c, 0xbe, 0xa7, 0x0f, 0xb0, 0xc8,
	0x07, 0x42, 0x60, 0x9a, 0x8f, 0xad, 0x20, 0xb8, 0x1c, 0xf5, 0x0c, 0x40, 0x74, 0x74, 0x3b, 0x03,
	0xbd, 0xd3, 0x8c, 0xbc, 0x4d, 0xf4, 0x2e, 0xaf, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x05, 0xa9,
	0x6e, 0x6c, 0xfa, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppendEntriesClient is the client API for AppendEntries service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppendEntriesClient interface {
	AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error)
}

type appendEntriesClient struct {
	cc *grpc.ClientConn
}

func NewAppendEntriesClient(cc *grpc.ClientConn) AppendEntriesClient {
	return &appendEntriesClient{cc}
}

func (c *appendEntriesClient) AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error) {
	out := new(AppendEntriesResponse)
	err := c.cc.Invoke(ctx, "/RPCs.AppendEntries/appendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppendEntriesServer is the server API for AppendEntries service.
type AppendEntriesServer interface {
	AppendEntries(context.Context, *AppendEntriesRequest) (*AppendEntriesResponse, error)
}

// UnimplementedAppendEntriesServer can be embedded to have forward compatible implementations.
type UnimplementedAppendEntriesServer struct {
}

func (*UnimplementedAppendEntriesServer) AppendEntries(ctx context.Context, req *AppendEntriesRequest) (*AppendEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendEntries not implemented")
}

func RegisterAppendEntriesServer(s *grpc.Server, srv AppendEntriesServer) {
	s.RegisterService(&_AppendEntries_serviceDesc, srv)
}

func _AppendEntries_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppendEntriesServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPCs.AppendEntries/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppendEntriesServer).AppendEntries(ctx, req.(*AppendEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppendEntries_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RPCs.AppendEntries",
	HandlerType: (*AppendEntriesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "appendEntries",
			Handler:    _AppendEntries_AppendEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "append_entries.proto",
}
